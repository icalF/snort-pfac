# Transition table: number of states = 15, initial state = 11
# (current state, input character) -> next state 
(   1,   h) -> 14 
(   2,   e) -> 3 
(   2,   i) -> 12 
(   3,   r) -> 6 
(   6,   s) -> 5 
(  10,   s) -> 8 
(  11,   h) -> 2 
(  11,   i) -> 13 
(  11,   s) -> 1 
(  12,   s) -> 7 
(  13,   i) -> 10 
(  13,   s) -> 9 
(  14,   e) -> 4 
# Output table: number of final states = 10
# [final state] [matched pattern ID] [pattern length] [pattern(string literal)] 
    1     1     1    "s"
    2     2     1    "h"
    3     3     2    "he"
    4     4     3    "she"
    5     5     4    "hers"
    6     6     3    "her"
    7     7     3    "his"
    8     8     3    "iis"
    9     9     2    "is"
   10    10     2    "ii"
